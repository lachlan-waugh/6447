<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>COMP6447 Resources</title><link>/</link><description>Recent content on COMP6447 Resources</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>02: buffer overflows</title><link>/lecture2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/lecture2/</guid><description>we&amp;rsquo;ll get started at [46]:05 buffer overflows 6447 lecture02 ___________________________. |[]|---------------------|[]|| |;;| ----------------- |;;|| |;;| | COMP6447 | |;;|| |;;| ----------------- |;;|| |;;| AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA |;;|_____________________|;;|| |;;;;;;;;;;;;;;;;;;;;;;;;;;;|| |;;;;;;_______________ ;;;;;|| |;;;;;| ___ |;;;;;|| |;;;;;| |;;;| |;;;;;|| |;;;;;| |___| |;;;;;|| \_____|_______________|_____|| ~~~~~^^^^^^^^^^^^^^^^^~~~~~~ reverse engineering how does assembly work compilers decompiling registers x86 registers tell me more even more&amp;hellip; what is a stack ebp &amp;amp; esp this might help this might actually help function (pro|epi)logue</description></item><item><title>1: intro</title><link>/week1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/week1/</guid><description>We&amp;rsquo;ll get started at 1[68]:05 tooling setup 6447 week1 Good faith policy We expect a high standard of professionalism from you at all times while you are taking any of our courses. We expect all students to act in good faith at all times
TLDR: Don&amp;rsquo;t be a dick jerk
sec.edu.au/good-faith-policy
&amp;gt; whoami Lachlan how to contact me lachlan.waugh@student.unsw.edu.au @melon on the SecEdu Slack @melon on the SecSoc Discord places for course discussion probably the discord mostly used to be secedu slack but it is :zombie: I will be more responsive on discord than email where to access resources waugh.</description></item><item><title>2: buffer overflows</title><link>/week2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/week2/</guid><description>We&amp;rsquo;ll get started at 1[68]:05 buffer overflowssssssssssssssssssssssssssssssssssssssssssss\xef\xeb\ad\ed 6447 week2 Good faith policy We expect a high standard of professionalism from you at all times while you are taking any of our courses. We expect all students to act in good faith at all times
TLDR: Don&amp;rsquo;t be a dick jerk
sec.edu.au/good-faith-policy
Lecture content what is stack buffer overflows memory protections register layout AX is the bottom half of EAX (AH/AL), not the top half stack frames what register stores the stack, and frame pointer?</description></item><item><title>3: shellcode</title><link>/week3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/week3/</guid><description>We&amp;rsquo;ll get started at 18:05 shellcode 6447 week3 Good faith policy We expect a high standard of professionalism from you at all times while you are taking any of our courses. We expect all students to act in good faith at all times
TLDR: Don&amp;rsquo;t be a dick jerk
sec.edu.au/good-faith-policy
todo reverse engineering shellcode memory protections (again) harder re instructions can give context to the variables
harder re #2 what&amp;rsquo;s different between these instructions?</description></item><item><title>4: format strings</title><link>/week4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/week4/</guid><description>We&amp;rsquo;ll get started at 1[68]:05 format strings 6447 week4 Good faith policy We expect a high standard of professionalism from you at all times while you are taking any of our courses. We expect all students to act in good faith at all times
TLDR: Don&amp;rsquo;t be a dick jerk
sec.edu.au/good-faith-policy
Lecture content format strings where to write memory protections printf (and it&amp;rsquo;s siblings) [v,va,s,sn,f]printf [v,va,s,sn,f]scanf setproctitle, syslog, and others! anatomy of a format string %&amp;lt;flags&amp;gt;&amp;lt;width&amp;gt;&amp;lt;precision&amp;gt;&amp;lt;modifier&amp;gt;&amp;lt;type&amp;gt;</description></item><item><title>5: programming errors/fuzzing</title><link>/week5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/week5/</guid><description>We&amp;rsquo;ll get started at 1[68]:05 fuzzing &amp;amp; programming errors 6447 week5 Good faith policy We expect a high standard of professionalism from you at all times while you are taking any of our courses. We expect all students to act in good faith at all times
TLDR: don&amp;rsquo;t be a dick jerk
sec.edu.au/good-faith-policy
Fuzzer (Group Project) [Major Project] on WebCMS okay ramble about fuzzers
due dates midpoint: end of week07 final: end of week10 Groups register here (linked on WebCMS) each group, just email me whos in your group cross-tutorial groups are fine wargame marks so far avg 3/3 war01 2.</description></item><item><title>7: rop</title><link>/week7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/week7/</guid><description>We&amp;rsquo;ll get started at 1[68]:05 return oriented programming 6447 week7 Good faith policy We expect a high standard of professionalism from you at all times while you are taking any of our courses. We expect all students to act in good faith at all times
TLDR: Don&amp;rsquo;t be a dick jerk
sec.edu.au/good-faith-policy
House cleaning Fuzzer Midpoint check-in is due this Sunday 6pm Make sure you&amp;rsquo;ve got a working prototype Midterm How&amp;rsquo;d you find it A summary so far weeks 2/3 buffer overflow â†’ win() shellcode (building a win()) now: rop/ret2 (building a win() again (not in the stack)) buffer overflows Abusing functions which can read more data than they have allocated memory for (gets, strcpy)</description></item><item><title>8: heap</title><link>/week8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/week8/</guid><description>We&amp;rsquo;ll get started at 1[68]:05 heap exploitation 6447 week8 Good faith policy We expect a high standard of professionalism from you at all times while you are taking any of our courses. We expect all students to act in good faith at all times
TLDR: Don&amp;rsquo;t be a dick jerk
sec.edu.au/good-faith-policy
chunks malloc() returns chunks (blocks of memory)
chunks can either be in-use or free each has different metadata associated with it in-use chunks what is the &amp;ldquo;metadata&amp;rdquo; size of the chunk last 3 bits: 1: chunk is in main arena 2: chunk is mmap&amp;rsquo;d (not in the heap) 3: previous chunk in use mixing metadata (control) &amp;amp; user data?</description></item><item><title>9: more rop</title><link>/week9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/week9/</guid><description>We&amp;rsquo;ll get started at 1[68]:05 rop techniques &amp;amp; revision 6447 week9 good faith policy we expect a high standard of professionalism from you at all times while you are taking any of our courses. We expect all students to act in good faith at all times
TLDR: Don&amp;rsquo;t be a dick jerk
sec.edu.au/good-faith-policy
doing more with rop calling functions it&amp;rsquo;s not just syscalls for execve(&amp;quot;/bin/sh&amp;quot;)
won&amp;rsquo;t always be calling assembly instructions generally you&amp;rsquo;ll have access to many more functions probably won&amp;rsquo;t get exactly what you want malloc, printf, mmap can all leverage other exploits</description></item><item><title>week01: introduction</title><link>/lecture1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/lecture1/</guid><description>We&amp;rsquo;ll get started at 18:05 course intro + background COMP6447 Week01 Good faith policy We expect a high standard of professionalism from you at all times while you are taking any of our courses. We expect all students to act in good faith at all times
TLDR: Don&amp;rsquo;t be a dick jerk
sec.edu.au/good-faith-policy
course introduction contact hours lectures - 2 hours tutorials - 2 hours maybe less than you&amp;rsquo;re used to</description></item><item><title>Week10</title><link>/week10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/week10/</guid><description>We&amp;rsquo;ll get started at [46]:05 Week10 T1[68]A COMP6447 Good faith policy We expect a high standard of professionalism from you at all times while you are taking any of our courses. We expect all students to act in good faith at all times
TLDR: Don&amp;rsquo;t be a dick jerk
sec.edu.au/good-faith-policy
My Experience How&amp;rsquo;d you find the course
What&amp;rsquo;d you like What&amp;rsquo;d you dislike What can be improved https://myexperience.unsw.edu.au
iOS Hacking demo anyone have an iPhone I can hack?</description></item></channel></rss>